{"ast":null,"code":"var _jsxFileName = \"/Users/tobiadesanya/Slurm-feedback/src/components/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"/Users/tobiadesanya/Slurm-feedback/src/components/Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  const handleSignup = () => {\n    if (formData.name.trim() && formData.email.trim()) {\n      // Save name and email locally for user identification\n      localStorage.setItem(\"username\", formData.name);\n      localStorage.setItem(\"email\", formData.email);\n\n      // Send the signup data to the backend\n      fetch(\"http://localhost:5000/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(res => res.json()).then(data => {\n        if (data.message === \"User registered successfully!\") {\n          alert(\"Signup successful! Redirecting...\");\n          navigate(\"/vote\");\n        } else {\n          alert(data.message);\n        }\n      });\n    } else {\n      alert(\"Please fill in both name and email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Video Experiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter your details to get started:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Name\",\n      value: formData.name,\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      }),\n      className: \"signup-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Your Email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      className: \"signup-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      className: \"signup-button\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"FWRxEMbFJ8sTMO2BXGSfeAyTG4A=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","name","email","navigate","handleSignup","trim","localStorage","setItem","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/tobiadesanya/Slurm-feedback/src/components/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"/Users/tobiadesanya/Slurm-feedback/src/components/Signup.css\";\n\nconst Signup = () => {\n  const [formData, setFormData] = useState({ name: \"\", email: \"\" });\n  const navigate = useNavigate();\n\n  const handleSignup = () => {\n    if (formData.name.trim() && formData.email.trim()) {\n      // Save name and email locally for user identification\n      localStorage.setItem(\"username\", formData.name);\n      localStorage.setItem(\"email\", formData.email);\n\n      // Send the signup data to the backend\n      fetch(\"http://localhost:5000/signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.message === \"User registered successfully!\") {\n            alert(\"Signup successful! Redirecting...\");\n            navigate(\"/vote\");\n          } else {\n            alert(data.message);\n          }\n        });\n    } else {\n      alert(\"Please fill in both name and email.\");\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h1>Welcome to the Video Experiment</h1>\n      <p>Please enter your details to get started:</p>\n      <input\n        type=\"text\"\n        placeholder=\"Your Name\"\n        value={formData.name}\n        onChange={(e) =>\n          setFormData({ ...formData, name: e.target.value })\n        }\n        className=\"signup-input\"\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Your Email\"\n        value={formData.email}\n        onChange={(e) =>\n          setFormData({ ...formData, email: e.target.value })\n        }\n        className=\"signup-input\"\n      />\n      <button onClick={handleSignup} className=\"signup-button\">\n        Start\n      </button>\n    </div>\n  );\n};\n\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}