{"ast":null,"code":"var _jsxFileName = \"/Users/tobiadesanya/Slurm-feedback/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (data.user_id) {\n      alert(\"Login successful!\");\n      localStorage.setItem(\"user_id\", data.user_id);\n    } else {\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"S/PMgPc7smM3/aThXBDA0mkgvj4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user_id","alert","localStorage","setItem","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/tobiadesanya/Slurm-feedback/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Login = () => {\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    });\n\n    const data = await response.json();\n    if (data.user_id) {\n      alert(\"Login successful!\");\n      localStorage.setItem(\"user_id\", data.user_id);\n    } else {\n      alert(data.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Login</h1>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={formData.email}\n        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={formData.password}\n        onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAErE,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,OAAO,EAAE;MAChBC,KAAK,CAAC,mBAAmB,CAAC;MAC1BC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACE,OAAO,CAAC;IAC/C,CAAC,MAAM;MACLC,KAAK,CAACH,IAAI,CAACM,OAAO,CAAC;IACrB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAMwB,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7B,OAAA;MACE8B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAE7B,QAAQ,CAACE,KAAM;MACtB4B,QAAQ,EAAGzB,CAAC,IAAKJ,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,KAAK,EAAEG,CAAC,CAAC0B,MAAM,CAACF;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACF7B,OAAA;MACE8B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE7B,QAAQ,CAACG,QAAS;MACzB2B,QAAQ,EAAGzB,CAAC,IAAKJ,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEE,CAAC,CAAC0B,MAAM,CAACF;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACF7B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAtCID,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}